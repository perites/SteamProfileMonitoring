from dataclasses import dataclass


@dataclass
class EventTexts:
    text_for_user: str or None
    text_for_admin: str or None
    text_for_dchannel: str or None

    need_format: list[str] or None

    def format(self, *f_args, **f_kwargs):
        if self.need_format:
            for name in self.need_format:
                self.__dict__[name] = self.__dict__[name].format(*f_args, **f_kwargs)

        return self

    def get_texts(self):
        texts = {}
        for name, value in self.__dict__.items():
            if name.startswith("text_for") and value:
                texts[name] = value

        return texts


game_bought = EventTexts(
    text_for_user="–û, –∫—É–ø–∏–≤ –Ω–∞—Ä–µ—à—Ç—ñ, —Å–ø–æ–¥—ñ–≤–∞—é—Å—å –≤—Å–µ —ñ–Ω—à–µ –≤–∂–µ –¥–æ–ø—Ä–æ–π—à–æ–≤, —â–æ–± —è–∫ —Ç—ñ–ª—å–∫–∏ —è –ø—Ä–∏—ó–¥—É –û–î–†–ê–ó–£ –ñ –ø—ñ—à–ª–∏ üòà",

    text_for_admin="–ü–ï–†–ï–ú–û–ì–ê –ë–£–î–ï, –∫—É–ø–∏–≤ –∫—É–ø–∏–≤ –∫—É–ø–∏–≤",

    text_for_dchannel="–ü–ï–†–ï–ú–û–ì–ê –ë–£–î–ï, <@{}> –∫—É–ø–∏–≤ —Å–µ–∫—ñ—Ä–æ",

    need_format=['text_for_dchannel']
)

sale_ends_soon = EventTexts(
    text_for_user='–°–∫–æ—Ä–æ –∫—ñ–Ω–µ—Ü—å –ª—ñ—Ç–Ω—å–æ–≥–æ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—É ( –º–µ–Ω—à –Ω—ñ–∂ –∑–∞ 24 –≥–æ–¥–∏–Ω–∏ ), –∞ —Ç–∏ —â–µ –Ω–µ –∫—É–ø–∏–≤ C–µ–∫—ñ—Ä–æ, —Ç–∞–∫ –Ω–µ –ø—ñ–¥–µ.\n –û–∑–Ω–∞–π–æ–º—Ç–µ—Å—å: https://store.steampowered.com/app/814380/Sekiro_Shadows_Die_Twice__GOTY_Edition/',

    text_for_admin="–∫—ñ–Ω–µ—Ü—å —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—É –∑–∞ 24 –≥–æ–¥–∏–Ω–∏ –∞ –≤—ñ–Ω —â–µ –Ω–µ –∫—É–ø–∏–≤, –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ",

    text_for_dchannel="–õ—ñ—Ç–Ω—ñ–π —Ä–æ–∑–ø—Ä–æ–¥–∞–∂ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –º–µ–Ω—à –Ω—ñ–∂ –∑–∞ 24 –≥–æ–¥–∏–Ω–∏, —Å–∞–º–µ —á–∞—Å –∫—É–ø—É–≤–∞—Ç–∏ –≤—Å–µ —â–æ –≤—ñ–¥–∫–ª–∞–¥–∞–ª–∏ (<@{}>)",

    need_format=['text_for_dchannel']

)

sale_ended = EventTexts(
    text_for_user='–õ—ñ—Ç–Ω—ñ–π —Ä–æ–∑–ø—Ä–æ–¥–∞–∂,–∑–∞–∫—ñ–Ω—á–∏–≤—Å—è, –∞ —Ç–∏ —â–µ –Ω–µ –∫—É–ø–∏–≤ —Å–µ–∫—ñ—Ä–æ, —Ü–µ –∑—Ä–∞–¥–∞.\n–ù—É —â–æ –∂, —Ç–µ–ø–µ—Ä –ø—Ä–∏–π–¥–µ—Ç—å—Å—è –∫—É–ø–∏—Ç–∏ –∑–∞ 2–∫ üòà\nhttps://store.steampowered.com/app/814380/Sekiro_Shadows_Die_Twice__GOTY_Edition/',

    text_for_admin="—Ä–æ–∑–ø—Ä–æ–¥–∞–∂ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è –∞ –≤—ñ–Ω —â–µ –Ω–µ –∫—É–ø–∏–≤, –ø–∞—Ö–Ω–µ –∑—Ä–∞–¥–æ—é , –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ",

    text_for_dchannel="–õ—ñ—Ç–Ω—ñ–π —Ä–æ–∑–ø—Ä–æ–¥–∞–∂ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è, –∞ —Ö—Ç–æ—Å—å (<@{}>) —Ç–∞–∫ —ñ –Ω–µ –∫—É–ø–∏–≤ —â–æ –º–∞–≤ –∫—É–ø–∏—Ç–∏ (",

    need_format=['text_for_dchannel']

)

counter_message = EventTexts(
    text_for_user=None,

    text_for_admin="–ù—ñ, —â–µ –Ω–µ –∫—É–ø–∏–≤ ( ",

    text_for_dchannel=None,

    need_format=None
)

EVENTS = {
    "counter_message": counter_message,

    "game_bought": game_bought,
    "sale_ends_soon": sale_ends_soon,
    "sale_ended": sale_ended,
}


def get_event_text(event, *f_args, **f_kwargs):
    event_text = EVENTS[event].format(*f_args, **f_kwargs)

    return event_text.get_texts()
